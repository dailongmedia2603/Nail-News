CREATE TABLE public.album_ratings (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  post_id UUID NOT NULL REFERENCES public.posts(id) ON DELETE CASCADE,
  user_id UUID NOT NULL REFERENCES auth.users(id) ON DELETE CASCADE,
  rating INTEGER NOT NULL CHECK (rating >= 1 AND rating <= 5),
  CONSTRAINT album_ratings_post_id_user_id_key UNIQUE (post_id, user_id)
);

ALTER TABLE public.album_ratings ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Public can view ratings" ON public.album_ratings FOR SELECT USING (true);
CREATE POLICY "Users can insert their own ratings" ON public.album_ratings FOR INSERT WITH CHECK (auth.uid() = user_id);
CREATE POLICY "Users can update their own ratings" ON public.album_ratings FOR UPDATE USING (auth.uid() = user_id);